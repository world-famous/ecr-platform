<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright 2015-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tianwen.springcloud.microservice.base.dao.DictItemMapper">

    <!-- 分页 -->
    <sql id="sqlFragment_pagination">
        <if test="numPerPage != null">
            limit #{numPerPage}
        </if>
        <if test="start != null">
            offset #{start}
        </if>
    </sql>

    <!-- 查询条件 -->
    <sql id="sqlFragment_searchCriteria">
        <if test="oredCriteria != null and oredCriteria.size != 0">
            <trim prefix="and(" suffix=")">
                <foreach collection="oredCriteria" item="criteria" separator="or">
                    <if test="criteria.valid">
                        <trim prefix="(" prefixOverrides="and" suffix=")">
                            <foreach collection="criteria.criteria" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        and ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        and ${criterion.condition} #{criterion.value}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                    </when>
                                    <when test="criterion.listValue">
                                        and ${criterion.condition}
                                        <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                 separator=",">
                                            #{listItem}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </trim>
        </if>
    </sql>

    <select id="getMaxId" resultType="String">
        select max(dictid) from t_e_sys_dict_item
    </select>

    <select id="queryDictItemForList" parameterType="java.util.Map"
        resultType="com.tianwen.springcloud.microservice.base.entity.DictItem">
        select * from t_e_sys_dict_item
        where 1 = 1
        <if test="dictid != null">
            <if test="!dictid.isEmpty()">
                and dictid ilike '%'||#{dictid}||'%'
            </if>
        </if>
        <if test="dictvalue != null">
            <if test="!dictvalue.isEmpty()">
                and dictvalue = #{dictvalue}
            </if>
        </if>
        <if test="parentdictid != null">
            <if test="!parentdictid.isEmpty()">
                and parentdictid = #{parentdictid}
            </if>
        </if>
        <if test="dicttypeid != null">
            <if test="!dicttypeid.isEmpty()">
                and dicttypeid ilike '%'||#{dicttypeid}||'%'
            </if>
        </if>
        <if test="dictname != null">
            <if test="!dictname.isEmpty()">
                and dictname ilike '%'||#{dictname}||'%'
            </if>
        </if>
        <if test="lang != null">
            <if test="!lang.isEmpty()">
                and lang = #{lang}
            </if>
        </if>
        order by dicttypeid asc, parentdictid asc, sortno asc
        <if test="getalldata == null">
            <include refid="sqlFragment_pagination"/>
        </if>
    </select>

    <select id="count" parameterType="java.util.Map" resultType="Integer">
        select count(*) from t_e_sys_dict_item
        where 1 = 1
        <if test="dictid != null">
            <if test="!dictid.isEmpty()">
                and dictid ilike '%'||#{dictid}||'%'
            </if>
        </if>
        <if test="dictvalue != null">
            <if test="!dictvalue.isEmpty()">
                and dictvalue = #{dictvalue}
            </if>
        </if>
        <if test="parentdictid != null">
            <if test="!parentdictid.isEmpty()">
                and parentdictid = #{parentdictid}
            </if>
        </if>
        <if test="dicttypeid != null">
            <if test="!dicttypeid.isEmpty()">
                and dicttypeid ilike '%'||#{dicttypeid}||'%'
            </if>
        </if>
        <if test="dictname != null">
            <if test="!dictname.isEmpty()">
                and dictname ilike '%'||#{dictname}||'%'
            </if>
        </if>
        <if test="lang != null">
            <if test="!lang.isEmpty()">
                and lang = #{lang}
            </if>
        </if>
    </select>

    <update id="doUpdate" parameterType="com.tianwen.springcloud.microservice.base.entity.DictItem">
        update t_e_sys_dict_item
        set dictname = #{dictname}, dictvalue = #{dictvalue}, remark = #{remark}, parentdictid = #{parentdictid}, "dicttypeid" = #{dicttypeid}, sortno = #{sortno},
        status = #{status}
        where dictid = #{dictid} and lang = #{lang} and iseditable = '1'
    </update>

    <delete id="doRemove" parameterType="String">
        delete from t_e_sys_dict_item where dictid = #{dictid} and iseditable = '1'
    </delete>

    <update id="updateType" parameterType="java.util.Map">
        update t_e_sys_dict_item
        set dicttypeid = #{newtypeid}
        where dicttypeid = #{oldtypeid}
    </update>

    <select id="getByDictInfo" parameterType="com.tianwen.springcloud.microservice.base.entity.DictItem"
            resultType="com.tianwen.springcloud.microservice.base.entity.DictItem">
        select * from t_e_sys_dict_item
        where 1=1
        <if test="dictid != null and !dictid.isEmpty()">
          and dictid=#{dictid}
        </if>
        <if test="parentdictid != null and !parentdictid.isEmpty()">
            and parentdictid=#{parentdictid}
        </if>
        <if test="dicttypeid != null and !dicttypeid.isEmpty()">
            and dicttypeid=#{dicttypeid}
        </if>
        <if test="dictvalue != null and !dictvalue.isEmpty()">
            and dictvalue=#{dictvalue}
        </if>
        <if test="dictname != null and !dictname.isEmpty()">
            and dictname=#{dictname}
        </if>
        <if test="lang != null and !lang.isEmpty()">
            and lang=#{lang}
        </if>
        limit 1
    </select>

    <select id="getESearchInfo" parameterType="java.util.Map"
            resultType="com.tianwen.springcloud.microservice.base.entity.ESearchInfo">
        select (select array_to_string(ARRAY_AGG(dictname), ',') from t_e_sys_dict_item where dicttypeid = 'SCHOOL_SECTION' and dictvalue = #{schoolsectionid}
        <if test="lang != null and !lang.isEmpty()"> and lang = #{lang}</if> limit 1) as schoolsection,
        (select array_to_string(ARRAY_AGG(dictname), ',') from t_e_sys_dict_item where dicttypeid = 'SUBJECT' and dictvalue = #{subjectid}
        <if test="lang != null and !lang.isEmpty()"> and lang = #{lang}</if> limit 1) as subject,
        (select array_to_string(ARRAY_AGG(dictname), ',') from t_e_sys_dict_item where dicttypeid = 'SCHOOL_SECTION' and dictvalue = #{gradeid}
        <if test="lang != null and !lang.isEmpty()"> and lang = #{lang}</if> limit 1) as grade,
        (select array_to_string(ARRAY_AGG(dictname), ',') from t_e_sys_dict_item where dicttypeid = 'EDITION' and dictvalue = #{editiontypeid}
        <if test="lang != null and !lang.isEmpty()"> and lang = #{lang}</if> limit 1) as editiontype,
        (select array_to_string(ARRAY_AGG(dictname), ',') from t_e_sys_dict_item where dicttypeid = 'VOLUME' and dictvalue = #{bookmodelid}
        <if test="lang != null and !lang.isEmpty()"> and lang = #{lang}</if> limit 1) as bookmodel,
        <!--(select array_to_string(ARRAY_AGG(catalogname), ',') from t_e_teachmaterial_catalog
        where #{catalogids} ilike '%,'||catalogid or #{catalogids} ilike catalogid||',%' or #{catalogids} = catalogid) as catalogids,
        (select array_to_string(ARRAY_AGG(name), ',') from t_e_konwledage_information where knowledgeid = #{knowledgeid}) as knowledgepoint,
        (select array_to_string(ARRAY_AGG(dictname), ',') from t_e_sys_dict_item where dicttypeid = 'CONTENT_TYPE' and dictvalue = #{contenttype}) as contenttype,!-->
        (select labelname from t_e_label where labelid = #{onelabelid}) as onelabelname,
        (select labelname from t_e_label where labelid = #{twolabelid}) as twolabelname,
        (select labelname from t_e_label where labelid = #{threelabelid}) as threelabelname,
        <!--(SELECT
        concat (
        area1.areaname || ' ',
        area2.areaname || ' ',
        area3.areaname
        ) AS area
        FROM
        t_e_user_logininfo usertbl
        LEFT JOIN t_e_org_edu orgtbl ON usertbl.orgid = orgtbl.orgid
        LEFT JOIN t_jc_sys_area area1 ON area1.areaid = orgtbl.areaid
        LEFT JOIN t_jc_sys_area area2 ON area2.areaid = area1.parentareaid
        LEFT JOIN t_jc_sys_area area3 ON area3.areaid = area2.parentareaid
        WHERE
        usertbl.userid = #{creator}
        ) AS area,
        (SELECT
        concat (
        area1.areaid || ' ',
        area2.areaid || ' ',
        area3.areaid
        ) AS area
        FROM
        t_e_user_logininfo usertbl
        LEFT JOIN t_e_org_edu orgtbl ON usertbl.orgid = orgtbl.orgid
        LEFT JOIN t_jc_sys_area area1 ON area1.areaid = orgtbl.areaid
        LEFT JOIN t_jc_sys_area area2 ON area2.areaid = area1.parentareaid
        LEFT JOIN t_jc_sys_area area3 ON area3.areaid = area2.parentareaid
        WHERE
        usertbl.userid = #{creator}
        ) AS areaid,
        (SELECT
        orgtbl.orgid
        FROM
        t_e_user_logininfo usertbl
        LEFT JOIN t_e_org_edu orgtbl ON usertbl.orgid = orgtbl.orgid
        WHERE
        usertbl.userid = #{creator}
        ) AS orgid,
        (SELECT
        orgtbl.orgname
        FROM
        t_e_user_logininfo usertbl
        LEFT JOIN t_e_org_edu orgtbl ON usertbl.orgid = orgtbl.orgid
        WHERE
        usertbl.userid = #{creator}
        ) AS orgname,!-->
        (SELECT
        usertbl.realname AS creator
        FROM
        t_e_user_logininfo usertbl
        WHERE
        usertbl.userid = #{creator}
        ) AS creator
    </select>
</mapper>
